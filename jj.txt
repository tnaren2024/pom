#!/usr/bin/env groovy
@Library('EnterpriseSharedLibrary') _

def label = "jenkins-${UUID.randomUUID().toString()}"
println "Pipeline to run - ${utils.pipelineToRun()}"
def branch = env.BRANCH_NAME
def ver = utils.versionNumber
def snapve = utils.snapshotVersionNumber
def relve = utils.releaseVersionNumber
println "Version: ${ver}, Snapshot: ${snapve} and Release Version: ${relve}."

node('cicd-build') {
    stage("Checkout") {
        scmCheckout {
            deleteWorkspace = 'false'
            node_version = "Nodejs 16"
        }
    }

    stage("Playwright Test") {
        environment {
            NODE_OPTIONS = "--dns-result-order=ipv4first"
        }
        steps {
            runSeleniumTestsOnSauceLabs {
                buildToolType = "node"
                branchName = "${branch}"
                executionType = "playwright"
                saucectlBinaryLocation = "https://artifactory.aexp.com/artifactory/ci-internal/saucectl/saucectl_0.143.0_linux_64-bit.tar.gz"
                invokeTRAUS = "yes"
                testCaseManagementSystem = "jira"
                user = "narendra.b.thodeti@aexp.com"
            }
        }
    }

    stage("trausUpload") {
        sh '''zip -r "artifacts_${JOB_BASE_NAME}_${BUILD_NUMBER}.zip" "artifacts/"'''
        trausUpload {
            isTrausProperties = 'no'
            testcaseID = "TC21571"
            testsetID = "TS4821"
            listOfFiles = "*.zip"
            testCaseManagementSystem = "rally"
            emails = "narendra.b.thodeti@aexp.com"
            comment = "rally comment"
        }
    }

    stage("Archive Artifacts") {
        archiveArtifacts artifacts: "**/artifacts/**"
    }
}
